// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package dbgen

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Address struct {
	ID           pgtype.UUID        `json:"id"`
	UserID       pgtype.UUID        `json:"user_id"`
	Label        pgtype.Text        `json:"label"`
	ReceiverName pgtype.Text        `json:"receiver_name"`
	Phone        pgtype.Text        `json:"phone"`
	Country      pgtype.Text        `json:"country"`
	Province     pgtype.Text        `json:"province"`
	City         pgtype.Text        `json:"city"`
	PostalCode   pgtype.Text        `json:"postal_code"`
	AddressLine1 pgtype.Text        `json:"address_line1"`
	AddressLine2 pgtype.Text        `json:"address_line2"`
	IsDefault    bool               `json:"is_default"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}

type Brand struct {
	ID        pgtype.UUID        `json:"id"`
	Name      string             `json:"name"`
	Slug      string             `json:"slug"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type Category struct {
	ID        pgtype.UUID        `json:"id"`
	Name      string             `json:"name"`
	Slug      string             `json:"slug"`
	ParentID  pgtype.UUID        `json:"parent_id"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type PasswordReset struct {
	ID        pgtype.UUID        `json:"id"`
	UserID    pgtype.UUID        `json:"user_id"`
	Token     string             `json:"token"`
	ExpiresAt pgtype.Timestamptz `json:"expires_at"`
	UsedAt    pgtype.Timestamptz `json:"used_at"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Product struct {
	ID         pgtype.UUID        `json:"id"`
	Title      string             `json:"title"`
	Slug       string             `json:"slug"`
	BrandID    pgtype.UUID        `json:"brand_id"`
	CategoryID pgtype.UUID        `json:"category_id"`
	Price      int64              `json:"price"`
	CompareAt  pgtype.Int8        `json:"compare_at"`
	InStock    bool               `json:"in_stock"`
	Thumbnail  pgtype.Text        `json:"thumbnail"`
	Badges     []string           `json:"badges"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type ProductImage struct {
	ID        pgtype.UUID `json:"id"`
	ProductID pgtype.UUID `json:"product_id"`
	Url       string      `json:"url"`
	SortOrder int32       `json:"sort_order"`
}

type ProductSpec struct {
	ID        pgtype.UUID `json:"id"`
	ProductID pgtype.UUID `json:"product_id"`
	Key       string      `json:"key"`
	Value     string      `json:"value"`
}

type ProductVariant struct {
	ID         pgtype.UUID `json:"id"`
	ProductID  pgtype.UUID `json:"product_id"`
	Sku        pgtype.Text `json:"sku"`
	Price      int64       `json:"price"`
	Stock      int32       `json:"stock"`
	Attributes []byte      `json:"attributes"`
}

type Session struct {
	ID           pgtype.UUID        `json:"id"`
	UserID       pgtype.UUID        `json:"user_id"`
	RefreshToken string             `json:"refresh_token"`
	UserAgent    pgtype.Text        `json:"user_agent"`
	Ip           pgtype.Text        `json:"ip"`
	ExpiresAt    pgtype.Timestamptz `json:"expires_at"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type User struct {
	ID           pgtype.UUID        `json:"id"`
	Name         string             `json:"name"`
	Email        string             `json:"email"`
	PasswordHash string             `json:"password_hash"`
	Roles        []string           `json:"roles"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}
